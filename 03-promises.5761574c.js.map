{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAES,IAAIC,QAFTH,EAEiB,CAACI,EAASC,KAC3BC,YAAW,KACTF,EAAQN,EAAS,GAChBC,EAAM,EAIQ,CAACK,EAASC,KAC3BC,YAAW,KACTD,EAAOP,EAAS,GACfC,EAAM,E,CAhBEQ,SAASC,cAAc,SAqB/BC,iBAAiB,UAAUC,IAClCA,EAAMC,iBACN,MAAMZ,EAAQa,SAASL,SAASC,cAAc,kBAAkBK,OAC1DC,EAAOF,SAASL,SAASC,cAAc,iBAAiBK,OACxDE,EAASH,SAASL,SAASC,cAAc,mBAAmBK,OAClE,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,IAAIlB,EAAWkB,EAAI,EACfC,EAAelB,EAAQe,EAAOE,EAClCnB,EAAcC,EAAUmB,GACrBC,MAAK,KACJC,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBmB,OAAkB,IAG3DK,OAAM,KACLH,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAemB,OAAkB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst selector = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(position);\n      }, delay);\n    });\n  } else {\n    // Reject\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(position);\n      }, delay);\n    });\n  }\n}\n\nselector.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const step = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    let currentDelay = delay + step * i;\n    createPromise(position, currentDelay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${currentDelay} ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${currentDelay} ms`\n        );\n      });\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","parseInt","value","step","amount","i","currentDelay","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5761574c.js.map"}